"Magic!
	filetype off
	set rtp+=~/.vim/bundle/vundle/
	call vundle#rc()
	Bundle 'gmarik/vundle'
	Bundle 'ivanov/vim-ipython'
	Bundle 'embear/vim-localvimrc'
	Bundle 'tpope/vim-surround'
	Bundle 'tpope/vim-repeat'
	Bundle 'chriskempson/base16-vim'
	Bundle 'dhruvasagar/vim-table-mode'
	Bundle 'vim-pandoc/vim-pandoc'
	Bundle 'vim-pandoc/vim-pandoc-syntax'
        Bundle 'junegunn/goyo.vim'
	Bundle 'davidhalter/jedi-vim'
	Bundle 'ervandew/supertab'
	Bundle 'SirVer/ultisnips'
	Bundle 'honza/vim-snippets'
	Bundle 'jamessan/vim-gnupg'
	Bundle 'nvie/vim-flake8'
	Bundle 'kien/ctrlp.vim'
	Bundle 'Bercio/vim-inkscape-insert'
	Bundle 'ap/vim-you-keep-using-that-word'
	Bundle 'kana/vim-smartword'
 

	syntax on
	filetype indent plugin on
	let g:table_mode_corner_corner = '+'
        let g:pandoc#modules#disabled = ["folding"]
"        let g:ipy_perform_mappings=0
"        map <Leader><space> <Plug>(IPython-RunFile)
"        map <Leader>d <Plug>(IPython-OpenPyDoc)
"        map <Leader>s <Plug>(IPython-UpdateShell)
"        map <Leader>f <Plug>(IPython-RunLine)
"        map <Leader>a <Plug>(IPython-RunLineAsTopLevel)
	map w  <Plug>(smartword-w)
	map b  <Plug>(smartword-b)
	map e  <Plug>(smartword-e)
	map ge  <Plug>(smartword-ge)

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

nnoremap Y y$
set incsearch
set ignorecase
set smartcase
set autowriteall
set noswapfile
set undofile
set undodir=~/.vim/undo
set wildmenu
set path=** 
set guifont=Inconsolata\ 10
set guioptions=aegi
set clipboard=unnamedplus
set dictionary=/usr/share/dict/cracklib-small
set cryptmethod=blowfish
set iskeyword-=_
set iskeyword-=-
set autochdir

if has("gui_running")
	set background=light
	colorscheme base16-solarized
else
	set background=dark
	colorscheme base16-railscasts
endif

set scrolloff=20
"highlight 81 char wide lines
highlight ColorColumn ctermbg=red
call matchadd('ColorColumn', '\%80v', 100)

let mapleader = ","
nnoremap <silent> <C-l> :nohlsearch<CR>
nnoremap <leader>v :e ~/.vimrc<CR>
set keymap=accents
set iminsert=0
cnoremap acc set iminsert=1<CR>
nnoremap gb :ls<CR>:b
nnoremap <leader>g :Goyo<CR>
cnoremap w! w !sudo tee > /dev/null %
augroup Formatting 
	au!
      	autocmd FileType markdown,pandoc TableModeEnable
	autocmd FileType markdown,pandoc set tw=80
	autocmd FileType markdown,pandoc set formatoptions+=aln
augroup END
autocmd! FileType python set makeprg="python\ %" 
let g:localvimrc_ask = 0
let g:localvimrc_sandbox = 0

function! Goyo_before()
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
endfunction

function! Goyo_after()
  " Quit Vim if this is the only remaining buffer
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
endfunction

function! s:auto_goyo()
  if &ft == 'pandoc'
    Goyo 80
  elseif exists('#goyo')
    let bufnr = bufnr('%')
    Goyo!
    execute 'b '.bufnr
  endif
endfunction

augroup goyo_markdown
  autocmd!
  autocmd BufNewFile,BufRead * call s:auto_goyo()
augroup END

let g:goyo_callbacks = [function('Goyo_before'), function('Goyo_after')]

